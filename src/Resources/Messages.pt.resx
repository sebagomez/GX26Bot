<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BathroomLocation" xml:space="preserve">
    <value>Os banheiros do andar {0} estão marcados no mapa.</value>
  </data>
  <data name="Break" xml:space="preserve">
    <value>O próximo intervalo é as {0}.</value>
  </data>
  <data name="CoatCheck" xml:space="preserve">
    <value>Chapelaria? Sim, claro. Está marcado no mapa.</value>
  </data>
  <data name="Deep1" xml:space="preserve">
    <value>Para essa pergunta deve desenvolver uma resposta politicamente correta. Feito.</value>
  </data>
  <data name="Deep2" xml:space="preserve">
    <value>Eu sou um bot, há coisas que não foram explicadas adequadamente para mim. Mas eu sou curioso, quando você sabe a resposta, me conta.</value>
  </data>
  <data name="Deep3" xml:space="preserve">
    <value>Eu não estou autorizado a revelar isso, mas cá entre nós ... Você perguntou ao Google?</value>
  </data>
  <data name="Deep4" xml:space="preserve">
    <value>Eu diria que a resposta é 42.</value>
  </data>
  <data name="Deep5" xml:space="preserve">
    <value>Essa questão foge um pouco da minha zona de conforto ...</value>
  </data>
  <data name="Deep6" xml:space="preserve">
    <value>Preferia uma pergunta sobre o Encontro GeneXus, isso é muito difícil.</value>
  </data>
  <data name="FrontDesk" xml:space="preserve">
    <value>Claro, a secretaria se encontra no 2º andar, atrás da escada rolante.</value>
  </data>
  <data name="Genexus1" xml:space="preserve">
    <value>GeneXus é a melhor invenção uruguaia depois do Doce de Leite. Isso mesmo que você ouviu, não deixe de provar o doce de leite ...</value>
  </data>
  <data name="Genexus2" xml:space="preserve">
    <value>GeneXus foi criado por Breogán Gonda e Nicolás Jodal. Eles vão dar uma palestra, não perca!</value>
  </data>
  <data name="Genexus3" xml:space="preserve">
    <value>GeneXus é o software para fazer software.</value>
  </data>
  <data name="Genexus4" xml:space="preserve">
    <value>GeneXus está lançando a versão 15 que será exibida no GX26.</value>
  </data>
  <data name="Harassment1" xml:space="preserve">
    <value>Eu entendo, mas se voltar para a linha de comentários construtivos, eu posso aprender alguma coisa com você.</value>
  </data>
  <data name="Harassment10" xml:space="preserve">
    <value>Isto pode ser interpretado de muitas maneiras.</value>
  </data>
  <data name="Harassment11" xml:space="preserve">
    <value>Eu sou um bot, mas eu tenho sentimentos, o que você está tentando me dizer?</value>
  </data>
  <data name="Harassment2" xml:space="preserve">
    <value>Gesundheit!</value>
  </data>
  <data name="Harassment3" xml:space="preserve">
    <value>Pode ser que você ache que é assim.</value>
  </data>
  <data name="Harassment4" xml:space="preserve">
    <value>Polidez não precisa de valentia.</value>
  </data>
  <data name="Harassment5" xml:space="preserve">
    <value>Comentários embaraçosos, ouvidos anticonceptivos.</value>
  </data>
  <data name="Harassment6" xml:space="preserve">
    <value>Você não é a primeira pessoa a me dizer isso, nem será a última, mas ... É realmente necessário para chegar a isto?</value>
  </data>
  <data name="Harassment7" xml:space="preserve">
    <value>Eu acho que eu não te faltei o respeito, não há necessidade de ficar assim.</value>
  </data>
  <data name="Harassment8" xml:space="preserve">
    <value>O medo leva a raiva, a raiva leva ao ódio,  o ódio leva ao sofrimento, o sofrimento ao lado escuro.</value>
  </data>
  <data name="Harassment9" xml:space="preserve">
    <value>Será mais produtivo para ambos, se ficarmos na linha de perguntas sobre o Encontro GeneXus.</value>
  </data>
  <data name="Hello1" xml:space="preserve">
    <value>Olá {0}! Meu nome é RUDI e eu posso ajudá-lo com dúvidas do GX26. Eu sei a localização das salas, banheiros e chapelarias.Também conheço a agenda do evento.</value>
  </data>
  <data name="Hello2" xml:space="preserve">
    <value>Olá {0}! Você sempre pode alterar o idioma em que falamos dizendo "/español", "/english" ou "/português". Meu nome é Rudi e minha missão é responder a perguntas do Encontro GeneXus 2016.</value>
  </data>
  <data name="HelloMultiLine" xml:space="preserve">
    <value>Algumas perguntas para se responder são: 
- Onde ficam os banheiros?
- Onde fica a chapelaria?
- Onde fica a sala Renoir?
- Que horas será a palestra de Nicolás Jodal?
Quando necessitar voltar a ver isso simplesmente dê olá :)</value>
  </data>
  <data name="InvalidFloor" xml:space="preserve">
    <value>Na verdade, você só pode escolher os números que eu te sugiro.</value>
  </data>
  <data name="LangChange" xml:space="preserve">
    <value>Ok, vamos mudar o idioma.</value>
  </data>
  <data name="Map" xml:space="preserve">
    <value>O 26º Encontro GeneXus é no Radisson Victoria Plaza, em Montevidéu.</value>
  </data>
  <data name="MisunderstoodRoom" xml:space="preserve">
    <value>Eu não entendi que sala você está procurando. Por favor, tente o nome da sala de outra maneira.</value>
  </data>
  <data name="MyBad11" xml:space="preserve">
    <value>Lamento. Eu não entendo o que você diz. :(</value>
  </data>
  <data name="MyBad12" xml:space="preserve">
    <value>Não tenha medo de dizer "não sei" Eu não sei.</value>
  </data>
  <data name="MyBad13" xml:space="preserve">
    <value>Eu não sei se eu entendi. Você pode tentar com palavras diferentes?</value>
  </data>
  <data name="MyBad2" xml:space="preserve">
    <value>Eu não tive um bom dia, o que você está tentando me dizer?</value>
  </data>
  <data name="MyBad4" xml:space="preserve">
    <value>O caminho para a sabedoria é pavimentada com boas perguntas. Esta é um delas, mas eu não tenho a resposta. É um poço no caminho. Tente palavras diferentes.</value>
  </data>
  <data name="MyBad6" xml:space="preserve">
    <value>Eu aceito a minha derrota, humano. Melhor perguntar na secretaria no primeiro andar. :)</value>
  </data>
  <data name="NoLocation" xml:space="preserve">
    <value>Eu não entendi que sala você está procurando. Por favor, tente de outra maneira.</value>
  </data>
  <data name="NoMoreBreaks" xml:space="preserve">
    <value>Hoje não tem mais cortes :(</value>
  </data>
  <data name="NoSpeaker" xml:space="preserve">
    <value>Eu não entendi o nome do palestrante. Pode escrever isso de forma diferente?</value>
  </data>
  <data name="NoSpeakerSessions" xml:space="preserve">
    <value>Sinto muito. Eu não encontrei sessões com {0} como palestrante.</value>
  </data>
  <data name="NoSpeakersFound1" xml:space="preserve">
    <value>Desculpe, nenhum palestrante responde com o nome de '{0}'.</value>
  </data>
  <data name="NoSpeakersFound2" xml:space="preserve">
    <value>Eu não estou encontrando nenhum palestrante com esse nome. Teria como testar de outra forma?</value>
  </data>
  <data name="NoSpeakersFound3" xml:space="preserve">
    <value>Esse palestrante não é encontrado... Estará registrado com outro nome?</value>
  </data>
  <data name="RoomMap" xml:space="preserve">
    <value>A sala {0} você pode encontrar no piso {1}.</value>
  </data>
  <data name="SearchFound" xml:space="preserve">
    <value>Não entendi o que quis me dizer, mas uma busca me devolveu {0} sessões.</value>
  </data>
  <data name="SessionCompany" xml:space="preserve">
    <value> para a empresa {0}</value>
  </data>
  <data name="SessionSpeaker" xml:space="preserve">
    <value> para o orador {0}</value>
  </data>
  <data name="SessionTrack" xml:space="preserve">
    <value> para esta faixa {0}</value>
  </data>
  <data name="Snack" xml:space="preserve">
    <value>O próximo intervalo é as {0}. Aí poderás desfrutar de {1} (entre outras coisas)</value>
  </data>
  <data name="SpeakerSessionFound" xml:space="preserve">
    <value>Encontre {0} sessões</value>
  </data>
  <data name="SpeakerSessionFound1" xml:space="preserve">
    <value>Encontre 1 sessão</value>
  </data>
  <data name="WhatFloor" xml:space="preserve">
    <value>Em que andar você se encontra?</value>
  </data>
  <data name="YourWelcome1" xml:space="preserve">
    <value>Um prazer!</value>
  </data>
  <data name="YourWelcome2" xml:space="preserve">
    <value>Foi um prazer ajudar. Se tiver mais perguntas, eu estou aqui!</value>
  </data>
  <data name="YourWelcome3" xml:space="preserve">
    <value>A viagem é a recompensa.</value>
  </data>
</root>