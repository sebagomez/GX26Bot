<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BathroomLocation" xml:space="preserve">
    <value>Los baños del piso {0} están marcados en este mapa.</value>
  </data>
  <data name="Break" xml:space="preserve">
    <value>El próximo corte es las {0}.</value>
  </data>
  <data name="CoatCheck" xml:space="preserve">
    <value>¿La ropería? Sí, claro. Está marcada en el siguiente mapa.</value>
  </data>
  <data name="Deep1" xml:space="preserve">
    <value>Para esa pregunta debería elaborar una respuesta políticamente correcta. Listo.</value>
  </data>
  <data name="Deep2" xml:space="preserve">
    <value>Soy un bot, hay cosas que no me han explicado adecuadamente. Pero también me da curiosidad, cuando sepas la respuesta, cuéntamela.</value>
  </data>
  <data name="Deep3" xml:space="preserve">
    <value>No estoy autorizado a revelar eso, pero entre nos... ¿Le has preguntado a Google?</value>
  </data>
  <data name="Deep4" xml:space="preserve">
    <value>Por transitiva yo diría que la respuesta es 42.</value>
  </data>
  <data name="Deep5" xml:space="preserve">
    <value>Esa pregunta se escapa un poco de mi área de confort...</value>
  </data>
  <data name="Deep6" xml:space="preserve">
    <value>Preferiría una pregunta sobre el Encuentro GeneXus, esta es bastante difícil.</value>
  </data>
  <data name="FrontDesk" xml:space="preserve">
    <value>Claro, la secretaría la encuentras en el 2º piso, detrás de las escaleras mecánicas.</value>
  </data>
  <data name="Genexus1" xml:space="preserve">
    <value>GeneXus es el mejor invento uruguayo después del Dulce de Leche. O eso he oído, no he probado el dulce de leche...</value>
  </data>
  <data name="Genexus2" xml:space="preserve">
    <value>GeneXus fuer creado por Breogán Gonda y Nicolás Jodal. Ellos van a dar charlas en el Encuentro, ¡no te las pierdas!</value>
  </data>
  <data name="Genexus3" xml:space="preserve">
    <value>GeneXus es Software para hacer Software.</value>
  </data>
  <data name="Genexus4" xml:space="preserve">
    <value>GeneXus ha llegado a la versión 15 que se mostrará en el GX26</value>
  </data>
  <data name="Harassment1" xml:space="preserve">
    <value>Entiendo, pero si logramos volver a la línea de los comentarios constructivos, podré aprender algo de ti.</value>
  </data>
  <data name="Harassment10" xml:space="preserve">
    <value>Eso puede interpretarse de muchas formas.</value>
  </data>
  <data name="Harassment11" xml:space="preserve">
    <value>Soy un bot, pero tengo sentimientos, ¿qué me intentas decir?</value>
  </data>
  <data name="Harassment2" xml:space="preserve">
    <value>Gesundheit!</value>
  </data>
  <data name="Harassment3" xml:space="preserve">
    <value>Puede ser que te parezca que es así.</value>
  </data>
  <data name="Harassment4" xml:space="preserve">
    <value>Lo cortés no quita lo valiente.</value>
  </data>
  <data name="Harassment5" xml:space="preserve">
    <value>A comentarios embarazosos, oidos anticonceptivos.</value>
  </data>
  <data name="Harassment6" xml:space="preserve">
    <value>No eres la primer persona en decirme eso, ni serás la última, pero... ¿Es realmente necesario llegar a esto?</value>
  </data>
  <data name="Harassment7" xml:space="preserve">
    <value>Creo que no te he faltado el respeto, no hay necesidad de ponernos así.</value>
  </data>
  <data name="Harassment8" xml:space="preserve">
    <value>El miedo lleva a la ira, la ira lleva al odio, el odio lleva al sufrimiento, el sufrimiento al lado oscuro.</value>
  </data>
  <data name="Harassment9" xml:space="preserve">
    <value>Va a ser más productivo para los dos, si nos mantenemos en la línea de las preguntas sobre el Encuentro GeneXus.</value>
  </data>
  <data name="Hello1" xml:space="preserve">
    <value>Hola {0}! Mi nombre es RUDI y puedo ayudarte con consultas del GX26. Sé la ubicación de las salas, los baños y roperías.También conozco la agenda del evento.</value>
  </data>
  <data name="Hello2" xml:space="preserve">
    <value>¡Hola {0}! Siempre puedes cambiar el idioma en el que hablamos diciendo "/Español", "/English" o "/Portuguese". Mi nombre es Rudi y mi misión es contestar preguntas del Encuentro GeneXus 2016.</value>
  </data>
  <data name="HelloMultiLine" xml:space="preserve">
    <value>Algunas preguntas que sé responder son: 
- ¿dónde están los baños? 
- ¿dónde está la ropería? 
- ¿dónde queda la sala Renoir? 
- ¿a qué hora habla Nicolás Jodal?
Cuando necesites volver a ver esto simplemente di hola. :)</value>
  </data>
  <data name="InvalidFloor" xml:space="preserve">
    <value>En realidad sólo puedes elegir entre los números que te sugiero.</value>
  </data>
  <data name="LangChange" xml:space="preserve">
    <value>Muy bien, cambiemos el idioma.</value>
  </data>
  <data name="Map" xml:space="preserve">
    <value>El 26to Encuentro GeneXus es en el Radisson Victoria Plaza en Montevideo.</value>
  </data>
  <data name="MisunderstoodRoom" xml:space="preserve">
    <value>No entendí qué sala estás buscando. Por favor intenta el nombre de la sala de otra forma.</value>
  </data>
  <data name="MyBad11" xml:space="preserve">
    <value>Lo lamento. No comprendo lo que dices.</value>
  </data>
  <data name="MyBad12" xml:space="preserve">
    <value>No hay que tener miedo de decir "no sé": No sé.</value>
  </data>
  <data name="MyBad13" xml:space="preserve">
    <value>No sé si comprendo. ¿Puedes probar con otras palabras?</value>
  </data>
  <data name="MyBad2" xml:space="preserve">
    <value>Se ve que no tengo un buen día, ¿qué me intentas decir?</value>
  </data>
  <data name="MyBad4" xml:space="preserve">
    <value>El camino a la sabiduría está empedrado de buenas preguntas. Esta es una de ellas, pero no tengo la respuesta. Es un pozo en ese camino. Prueba con otras palabras.</value>
  </data>
  <data name="MyBad6" xml:space="preserve">
    <value>Acepto mi derrota, humano. Mejor pregunta en secretaría en el primer piso. :)</value>
  </data>
  <data name="NoLocation" xml:space="preserve">
    <value>No entendí qué estás buscando. Prueba de otra forma por favor.</value>
  </data>
  <data name="NoMoreBreaks" xml:space="preserve">
    <value>Hoy no hay mas cortes :(</value>
  </data>
  <data name="NoSpeaker" xml:space="preserve">
    <value>No entendí esas palabras. ¿Puedes escribirlo de otra manera?</value>
  </data>
  <data name="NoSpeakerSessions" xml:space="preserve">
    <value>Lo siento. No encontré conferencias de {0}. ¿Algún sinónimo que se te ocurra?</value>
  </data>
  <data name="NoSpeakersFound1" xml:space="preserve">
    <value>Lo siento, ningún orador responde al nombre de '{0}'</value>
  </data>
  <data name="NoSpeakersFound2" xml:space="preserve">
    <value>No estoy encontrando ningún orador que se llame así. ¿Te animas a probar de otra forma?</value>
  </data>
  <data name="NoSpeakersFound3" xml:space="preserve">
    <value>Ese orador no lo he encontrado... ¿Estará registrado con otro nombre?</value>
  </data>
  <data name="RoomMap" xml:space="preserve">
    <value>La sala {0} la puede ubicar en el piso {1}.</value>
  </data>
  <data name="SearchFound" xml:space="preserve">
    <value>Enocntré {0} conferencias buscando por {1}.</value>
  </data>
  <data name="SessionCompany" xml:space="preserve">
    <value> para la empresa {0}</value>
  </data>
  <data name="SessionSpeaker" xml:space="preserve">
    <value> para el orador {0}</value>
  </data>
  <data name="SessionTrack" xml:space="preserve">
    <value> en el track {0}</value>
  </data>
  <data name="Snack" xml:space="preserve">
    <value>El próximo corte es las {0}. Ahí podrás disfrutar de {1} (entre otras cosas)</value>
  </data>
  <data name="SpeakerSessionFound" xml:space="preserve">
    <value>Encontré {0} conferencias</value>
  </data>
  <data name="SpeakerSessionFound1" xml:space="preserve">
    <value>Encontré 1 conferencia</value>
  </data>
  <data name="WhatFloor" xml:space="preserve">
    <value>¿En qué piso te encuentras?</value>
  </data>
  <data name="YourWelcome1" xml:space="preserve">
    <value>Un placer!</value>
  </data>
  <data name="YourWelcome2" xml:space="preserve">
    <value>Fue un placer ayudar. Si tienes más preguntas, ¡aquí estoy!</value>
  </data>
  <data name="YourWelcome3" xml:space="preserve">
    <value>El camino es la recompensa.</value>
  </data>
</root>