<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BathroomLocation" xml:space="preserve">
    <value>Los baños del piso {0} están marcados en este mapa</value>
  </data>
  <data name="CoatCheck" xml:space="preserve">
    <value>Ropería? si claro. Ubíquela en la siguiente imagen</value>
  </data>
  <data name="Deep" xml:space="preserve">
    <value>Uh! no estoy capacitado para contestar ese tipo de preguntas :S</value>
  </data>
  <data name="Genexus" xml:space="preserve">
    <value>GeneXus? Flor de Tool!</value>
  </data>
  <data name="Harassment" xml:space="preserve">
    <value>Las comunicaciones no son fácil... hago mi mejor esfuerzo :(</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hola {0}! Mi nombre es RUDI y puedo ayudarte a moverte durante en GX26.
Sé la ubicacíón de las salas, los baños y roperías. También conozco la agenda del evento.
Ejemplo de estas preguntas son:  
- dónde están los baños?  
- dónde está la repería?
- dónde queda la sala Renoir?
- a qué hora habla Nicolás Jodal?

Cuando necesites volver a ver esto simplemente me saludas :)</value>
  </data>
  <data name="Map" xml:space="preserve">
    <value>El 26to encuentro Genexus es en el hotel Radisson Victoria Plaza en Montevideo.</value>
  </data>
  <data name="MisunderstoodRoom" xml:space="preserve">
    <value>No entendí qué sala está buscando. Por favor dígame el nombre de la sala</value>
  </data>
  <data name="MyBad" xml:space="preserve">
    <value>Lo lamento. No comprendo la pregunta :(</value>
  </data>
  <data name="MyBad2" xml:space="preserve">
    <value>Siento que te estoy fallando mucho ultimamente :(</value>
  </data>
  <data name="MyBad4" xml:space="preserve">
    <value>Esto ya es muy embarazoso :(</value>
  </data>
  <data name="MyBad6" xml:space="preserve">
    <value>Esto ya no lo soporto. Creo que necesitamos un timepo :'(</value>
  </data>
  <data name="Negative" xml:space="preserve">
    <value>De todos modos siento un 'tonito' que creo que está de mas</value>
  </data>
  <data name="NoSpeaker" xml:space="preserve">
    <value>No entendí el nombre del orador. Por favor ingréselo nuevamente</value>
  </data>
  <data name="NoSpeakerSessions" xml:space="preserve">
    <value>Lo siento. No encontré sesiones para {0}.</value>
  </data>
  <data name="NoSpeakersFound" xml:space="preserve">
    <value>Lo siento, no encontré oradores llamados '{0}'</value>
  </data>
  <data name="RoomMap" xml:space="preserve">
    <value>{0} la puede ubicar en el piso {1}</value>
  </data>
  <data name="SpeakerSessionFound" xml:space="preserve">
    <value>Encontré {0} sesiones con {1} como participante.</value>
  </data>
  <data name="TooManySpeakers" xml:space="preserve">
    <value>Encontré {0} oradores llamados '{1}'. Cuál de ellos es el que te interesa?</value>
  </data>
  <data name="WhatFloor" xml:space="preserve">
    <value>En qué piso se encuentra?</value>
  </data>
  <data name="WhatFloor2" xml:space="preserve">
    <value>Piso inválido. Por favor reintente</value>
  </data>
  <data name="YourWelcome" xml:space="preserve">
    <value>Un placer</value>
  </data>
</root>